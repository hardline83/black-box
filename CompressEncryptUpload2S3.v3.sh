#!/bin/bash
set -euo pipefail

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è S3 ---
S3_ENDPOINT="coca-cola.obs.ru-moscow-1.hc.sbercloud.ru"
S3_CREDENTIALS_FILE="/etc/s3_credentials.conf"  # –§–æ—Ä–º–∞—Ç: ACCESS_KEY=xxx\nSECRET_KEY=yyy

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ "$#" -ne 3 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∏—Å—Ö–æ–¥–Ω—ã–π_—Ñ–∞–π–ª_–∏–ª–∏_–ø–∞–ø–∫–∞> <–∫–ª—é—á_—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è.key> <–≤—ã—Ö–æ–¥–Ω–æ–π_—Ñ–∞–π–ª.enc>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 /data/large_file.dat /secure/keyfile.key backup_2023.enc"
    exit 1
fi

SOURCE="$1"
KEYFILE="$2"
OUTPUT="$3"
LOG_FILE="${OUTPUT%.*}.log"
HOSTNAME=$(hostname)
BACKUP_DATE=$(date +%Y-%m-%d)
S3_BASE_PATH="s3://$HOSTNAME/$BACKUP_DATE/"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö S3
if [ ! -f "$S3_CREDENTIALS_FILE" ]; then
    echo "‚ùå –§–∞–π–ª —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö S3 –Ω–µ –Ω–∞–π–¥–µ–Ω: $S3_CREDENTIALS_FILE" | tee -a "$LOG_FILE"
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ S3
upload_to_s3() {
    local file_path=$1
    local s3_path="${S3_BASE_PATH}$(basename "$file_path")"
    
    source "$S3_CREDENTIALS_FILE"
    
    echo "üîº –ó–∞–≥—Ä—É–∑–∫–∞ $file_path –≤ S3..." | tee -a "$LOG_FILE"
    
    AWS_ACCESS_KEY_ID="$ACCESS_KEY" \
    AWS_SECRET_ACCESS_KEY="$SECRET_KEY" \
    aws s3 cp "$file_path" "$s3_path" \
        --endpoint-url "https://$S3_ENDPOINT" \
        --region ru-moscow-1 2>&1 | tee -a "$LOG_FILE"
    
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
        echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $s3_path" | tee -a "$LOG_FILE"
        echo "üîó S3 URL: https://${S3_BASE_PATH#s3://}$(basename "$file_path")" | tee -a "$LOG_FILE"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ S3!" | tee -a "$LOG_FILE"
        return 1
    fi
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥-—Ñ–∞–π–ª–∞
{
    echo "=== –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò $(date) ==="
    echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞: $0 $SOURCE $KEYFILE $OUTPUT"
} | tee -a "$LOG_FILE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
for cmd in tar openssl pigz; do
    if ! command -v $cmd &> /dev/null; then
        echo "‚ùå –û—à–∏–±–∫–∞: $cmd –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" | tee -a "$LOG_FILE"
        exit 1
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
if [ ! -f "$KEYFILE" ]; then
    echo "‚ùå –§–∞–π–ª –∫–ª—é—á–∞ $KEYFILE –Ω–µ –Ω–∞–π–¥–µ–Ω!" | tee -a "$LOG_FILE"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–≤–æ–π–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
log() {
    echo -e "$@" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
format_time() {
    local seconds=$1
    local hours=$((seconds/3600))
    local minutes=$(( (seconds%3600)/60 ))
    local secs=$((seconds%60))
    printf "%02d:%02d:%02d" $hours $minutes $secs
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
get_size() {
    if [ -d "$SOURCE" ]; then
        du -sb "$SOURCE" | cut -f1
    else
        stat -c %s "$SOURCE"
    fi
}

TOTAL_SIZE=$(get_size)
log "\n=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ò–°–¢–û–ß–ù–ò–ö–ï ==="
log "üîπ –ò—Å—Ç–æ—á–Ω–∏–∫: $SOURCE"
log "üîπ –¢–∏–ø: $([ -d "$SOURCE" ] && echo "–ü–∞–ø–∫–∞" || echo "–§–∞–π–ª")"
log "üîπ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $TOTAL_SIZE)"

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
COMPRESS_START=$(date +%s.%N)

# –ü–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
if [ -d "$SOURCE" ]; then
    COMPRESS_CMD="tar -cf - -C $(dirname "$SOURCE") $(basename "$SOURCE") | pigz -9 -k 2>/dev/null"
else
    COMPRESS_CMD="pigz -9 -k -c $SOURCE 2>/dev/null"
fi

# –≠—Ç–∞–ø —Å–∂–∞—Ç–∏—è
log "\n=== –≠–¢–ê–ü –°–ñ–ê–¢–ò–Ø ==="
eval "$COMPRESS_CMD | wc -c > /tmp/compressed_size &"
COMPRESS_PID=$!

# –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –∑–∞–ø–∏—Å—å—é –≤ –ª–æ–≥
while kill -0 $COMPRESS_PID 2>/dev/null; do
    printf "‚è≥ –°–∂–∞—Ç–∏–µ... [%-50s]\r" $(yes "#" | head -n $((SECONDS%50)) | tr -d '\n')
    sleep 0.5
done

COMPRESS_END=$(date +%s.%N)
COMPRESSED_SIZE=$(cat /tmp/compressed_size)
rm /tmp/compressed_size

COMPRESS_TIME=$(echo "$COMPRESS_END - $COMPRESS_START" | bc)
log "\nüîπ –í—Ä–µ–º—è —Å–∂–∞—Ç–∏—è: $(format_time ${COMPRESS_TIME%.*})"
log "üîπ –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ —Å–∂–∞—Ç–∏—è: $(numfmt --to=iec $COMPRESSED_SIZE)"
log "üîπ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è: $(echo "scale=2; $TOTAL_SIZE/$COMPRESSED_SIZE" | bc)x"

# –≠—Ç–∞–ø —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
log "\n=== –≠–¢–ê–ü –®–ò–§–†–û–í–ê–ù–ò–Ø ==="
ENCRYPT_START=$(date +%s.%N)

eval "$COMPRESS_CMD | openssl enc -aes-256-cbc -salt -pbkdf2 -out $OUTPUT -pass file:$KEYFILE"

ENCRYPT_END=$(date +%s.%N)
ENCRYPT_TIME=$(echo "$ENCRYPT_END - $ENCRYPT_START" | bc)

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
log "\n=== –†–ï–ó–£–õ–¨–¢–ê–¢ ==="
log "üîπ –ò—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª: $OUTPUT"
log "üîπ –†–∞–∑–º–µ—Ä –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $(du -h $OUTPUT | cut -f1)"
log "üîπ –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: $(format_time $(echo "$ENCRYPT_END - $COMPRESS_START" | bc))"
log "üîπ –°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏: $(numfmt --to=iec $(echo "$TOTAL_SIZE/($ENCRYPT_END - $COMPRESS_START)" | bc)/—Å–µ–∫"

# –î–∏–∞–≥—Ä–∞–º–º–∞ –≤—Ä–µ–º–µ–Ω–∏
log "\n=== –í–†–ï–ú–ï–ù–ù–ê–Ø –î–ò–ê–ì–†–ê–ú–ú–ê ==="
TOTAL_TIME=$(echo "$ENCRYPT_END - $COMPRESS_START" | bc)
COMPRESS_PERCENT=$(echo "scale=1; $COMPRESS_TIME*100/$TOTAL_TIME" | bc)
ENCRYPT_PERCENT=$(echo "scale=1; $ENCRYPT_TIME*100/$TOTAL_TIME" | bc)

log "–°–∂–∞—Ç–∏–µ  [$(printf '%*s' ${COMPRESS_PERCENT%.*} '' | tr ' ' '#')] ${COMPRESS_PERCENT}%"
log "–®–∏—Ñ—Ä–æ–≤. [$(printf '%*s' ${ENCRYPT_PERCENT%.*} '' | tr ' ' '#')] ${ENCRYPT_PERCENT}%"

# –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∞
{
    echo -e "\n=== –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ==="
    echo "–•–æ—Å—Ç: $HOSTNAME"
    echo "–û–°: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2)"
    echo "CPU: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
    echo "RAM: $(free -h | awk '/Mem:/ {print $2}')"
    echo "–î–∏—Å–∫–∏:"
    df -h | grep -v "tmpfs" | tee -a "$LOG_FILE"
    echo -e "\n=== –ó–ê–í–ï–†–®–ï–ù–û $(date) ==="
} | tee -a "$LOG_FILE"

# --- –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ S3 ---
echo -e "\n=== –ó–ê–ì–†–£–ó–ö–ê –í S3 ===" | tee -a "$LOG_FILE"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –≤ S3
AWS_ACCESS_KEY_ID=$(grep ACCESS_KEY "$S3_CREDENTIALS_FILE" | cut -d'=' -f2) \
AWS_SECRET_ACCESS_KEY=$(grep SECRET_KEY "$S3_CREDENTIALS_FILE" | cut -d'=' -f2) \
aws s3api put-object \
    --bucket "$HOSTNAME" \
    --key "$BACKUP_DATE/" \
    --endpoint-url "https://$S3_ENDPOINT" \
    --region ru-moscow-1 >/dev/null 2>&1 || true

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
upload_to_s3 "$OUTPUT"
upload_to_s3 "$LOG_FILE"

# –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
echo -e "\n=== –†–ï–ó–Æ–ú–ï ===" | tee -a "$LOG_FILE"
echo "–ê—Ä—Ö–∏–≤: $OUTPUT" | tee -a "$LOG_FILE"
echo "–õ–æ–≥-—Ñ–∞–π–ª: $LOG_FILE" | tee -a "$LOG_FILE"
echo "S3 Location: https://$S3_ENDPOINT/$HOSTNAME/$BACKUP_DATE/" | tee -a "$LOG_FILE"