#!/bin/bash
set -euo pipefail

# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ====================
S3_ENDPOINT="https://coca-cola.obs.ru-moscow-1.hc.sbercloud.ru"
S3_CREDENTIALS_FILE="/etc/s3_credentials.conf"  # –§–æ—Ä–º–∞—Ç: ACCESS_KEY=xxx\nSECRET_KEY=yyy
TMP_DIR="/tmp"                                  # –ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
OUTPUT_DIR="./restored_data"                    # –ö—É–¥–∞ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞—Ç—å

# ==================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================
echo "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –±—ç–∫–∞–ø—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ s3://bucket/path/to/file.enc:"
read -r S3_PATH

# –ü–∞—Ä—Å–∏–Ω–≥ S3 –ø—É—Ç–∏
if [[ ! "$S3_PATH" =~ ^s3://([^/]+)/(.+)$ ]]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏. –û–∂–∏–¥–∞–µ—Ç—Å—è: s3://bucket/path/to/file.enc"
    exit 1
fi

BUCKET="${BASH_REMATCH[1]}"
OBJECT_PATH="${BASH_REMATCH[2]}"
BACKUP_NAME=$(basename "$OBJECT_PATH" .enc)
LOG_FILE="./restore_${BACKUP_NAME}_$(date +%Y%m%d_%H%M%S).log"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
if [ $# -ne 1 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–ª—é—á_—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è.key>"
    exit 1
fi
KEYFILE="$1"

# ==================== –§–£–ù–ö–¶–ò–ò ====================
log() {
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] $@" | tee -a "$LOG_FILE"
}

format_duration() {
    local seconds=$1
    printf "%02d—á %02d–º %02d—Å" $((seconds/3600)) $(( (seconds%3600)/60 )) $((seconds%60))
}

check_deps() {
    for cmd in aws openssl pigz tar; do
        if ! command -v $cmd &>/dev/null; then
            log "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: $cmd"
            exit 1
        fi
    done
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
}

# ==================== –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ====================
main() {
    log "=== –ù–ê–ß–ê–õ–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø ==="
    log "ü™£ Bucket: $BUCKET"
    log "üìÇ Object: $OBJECT_PATH"
    log "üîë Keyfile: $KEYFILE"

    check_deps
    mkdir -p "$TMP_DIR" "$OUTPUT_DIR"

    # 1. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑ S3
    local download_start=$(date +%s.%N)
    local encrypted_file="${TMP_DIR}/${BACKUP_NAME}.enc"

    log "\n=== –≠–¢–ê–ü –ó–ê–ì–†–£–ó–ö–ò –ò–ó S3 ==="
    source "$S3_CREDENTIALS_FILE"

    AWS_ACCESS_KEY_ID="$ACCESS_KEY" \
    AWS_SECRET_ACCESS_KEY="$SECRET_KEY" \
    aws s3 cp "$S3_PATH" "$encrypted_file" \
        --endpoint-url "$S3_ENDPOINT" \
        --region ru-moscow-1 2>&1 | tee -a "$LOG_FILE"

    [ ${PIPESTATUS[0]} -ne 0 ] && {
        log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ S3"
        exit 1
    }

    local download_end=$(date +%s.%N)
    local download_dur=$(echo "$download_end - $download_start" | bc | awk '{printf "%.2f", $0}')
    log "‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω –∑–∞ $download_dur —Å–µ–∫. ($(numfmt --to=iec $(stat -c %s "$encrypted_file")))"

    # 2. –î–µ—à–∏—Ñ—Ä–æ–≤–∫–∞
    local decrypt_start=$(date +%s.%N)
    local archive_file="${TMP_DIR}/${BACKUP_NAME}.tar.gz"

    log "\n=== –≠–¢–ê–ü –î–ï–®–ò–§–†–û–í–ê–ù–ò–Ø ==="
    openssl enc -d -aes-256-cbc -pbkdf2 \
        -in "$encrypted_file" \
        -out "$archive_file" \
        -pass file:"$KEYFILE" 2>&1 | tee -a "$LOG_FILE"

    [ ${PIPESTATUS[0]} -ne 0 ] && {
        log "‚ùå –û—à–∏–±–∫–∞ –¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∏"
        exit 1
    }

    local decrypt_end=$(date +%s.%N)
    local decrypt_dur=$(echo "$decrypt_end - $decrypt_start" | bc | awk '{printf "%.2f", $0}')
    log "‚úÖ –§–∞–π–ª –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω –∑–∞ $decrypt_dur —Å–µ–∫."

    # 3. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
    local extract_start=$(date +%s.%N)

    log "\n=== –≠–¢–ê–ü –†–ê–°–ü–ê–ö–û–í–ö–ò ==="
    if file "$archive_file" | grep -q "gzip compressed"; then
        log "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞..."
        pigz -dc "$archive_file" | tar -xC "$OUTPUT_DIR" 2>&1 | tee -a "$LOG_FILE"
    else
        log "üîÑ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–µ–∑ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏..."
        tar -xf "$archive_file" -C "$OUTPUT_DIR" 2>&1 | tee -a "$LOG_FILE"
    fi

    [ ${PIPESTATUS[0]} -ne 0 ] && {
        log "‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏"
        exit 1
    }

    local extract_end=$(date +%s.%N)
    local extract_dur=$(echo "$extract_end - $extract_start" | bc | awk '{printf "%.2f", $0}')
    log "‚úÖ –î–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω—ã –≤ $OUTPUT_DIR –∑–∞ $extract_dur —Å–µ–∫."

    # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    local total_dur=$(echo "$(date +%s.%N) - $download_start" | bc | awk '{printf "%.0f", $0}')
    log "\n=== –°–í–û–î–ö–ê ==="
    log "‚åõ –û–±—â–µ–µ –≤—Ä–µ–º—è: $(format_duration $total_dur)"
    log "üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: $(du -sh "$OUTPUT_DIR" | cut -f1)"
    log "üìù –õ–æ–≥-—Ñ–∞–π–ª: $LOG_FILE"

    # –û—á–∏—Å—Ç–∫–∞
    rm -f "$encrypted_file" "$archive_file"
    log "\nüßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
    log "=== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û ==="
}

# –ó–∞–ø—É—Å–∫
main