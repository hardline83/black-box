#!/bin/bash
set -euo pipefail
total_time_start=$(date +%s.%N)

# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ====================
OBS_BUCKET="black-box"
OBS_CONFIG_FILE="$HOME/.obsutilconfig"
COMPRESS_LEVEL=6
MAX_RETRIES=3
TMP_DIR="./tmp"
CHUNK_SIZE="50G"

# Telegram Notifications
TG_BOT_TOKEN="6735752447:AAFyoJcKxorLSdqaJbs73IV-fY28TJMIA4Y"
TG_CHAT_ID="816382525"
TG_API_URL="https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage"

# ==================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================
SOURCE="./dump_archive/terrasoft-$(date -d "yesterday" +%Y-%m-%d).bac"
KEYFILE="./encryption.key"
HOSTNAME="itsmout-t-dba01"
BACKUP_DATE=$(date +%Y-%m-%d)
TIMESTAMP=$(date +%Y%m%d)
BACKUP_NAME="backup_${HOSTNAME}_${TIMESTAMP}"
ARCHIVE_FILE="${TMP_DIR}/${BACKUP_NAME}.tar.gz"
ENCRYPTED_FILE="${TMP_DIR}/${BACKUP_NAME}.enc"
LOG_FILE="./${BACKUP_NAME}.log"
PART_PREFIX="${TMP_DIR}/${BACKUP_NAME}_part_"

# –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
prepare_temp_dir() {
    if [ ! -d "$TMP_DIR" ]; then
        mkdir -p "$TMP_DIR"
        log "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TMP_DIR"
    else
        rm -rf "${TMP_DIR:?}/"*
        log "‚úÖ –û—á–∏—â–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TMP_DIR"
    fi

    mkdir -p "$(dirname "$LOG_FILE")"
}

# ==================== –§–£–ù–ö–¶–ò–ò ====================
log() {
    local message
    message="$*"
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] ${message}" | tee -a "$LOG_FILE"
}

send_telegram() {
    local message="$1"
    curl -s -X POST "$TG_API_URL" \
        -d chat_id="$TG_CHAT_ID" \
        -d text="$message" \
        -d parse_mode="Markdown" >/dev/null
}

format_duration() {
    local seconds=$1
    printf "%02d—á %02d–º %02d—Å" $((seconds/3600)) $(( (seconds%3600)/60 )) $((seconds%60))
}

convert_to_bytes() {
    local size=$1
    echo "$size" | awk '{
        if ($0 ~ /[0-9]+K$/) {size=$0+0; size=size*1024}
        else if ($0 ~ /[0-9]+M$/) {size=$0+0; size=size*1024*1024}
        else if ($0 ~ /[0-9]+G$/) {size=$0+0; size=size*1024*1024*1024}
        else if ($0 ~ /[0-9]+T$/) {size=$0+0; size=size*1024*1024*1024*1024}
        else {size=$0+0}
        print size
    }' | tr -d '[:alpha:]'
}

check_deps() {
    local missing=()
    for cmd in tar pigz openssl obsutil split; do
        if ! command -v $cmd &>/dev/null; then
            missing+=("$cmd")
        fi
    done

    if [ ${#missing[@]} -gt 0 ]; then
        log "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing[*]}"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–ü—Ä–æ–±–ª–µ–º–∞:* –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ - ${missing[*]}"
        exit 1
    fi
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"

    if [ ! -f "$OBS_CONFIG_FILE" ]; then
        log "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª obsutil –Ω–µ –Ω–∞–π–¥–µ–Ω: $OBS_CONFIG_FILE"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–ü—Ä–æ–±–ª–µ–º–∞:* –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥ obsutil"
        exit 1
    fi
}

check_disk_space() {
    local needed=$(($(get_size "$SOURCE") /2 / 1024))
    local available=$(df -k "$TMP_DIR" | awk 'NR==2 {print $4}')

    if [ "$available" -lt "$needed" ]; then
        log "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ $TMP_DIR. –ù—É–∂–Ω–æ: $(numfmt --to=iec ${needed}K), –¥–æ—Å—Ç—É–ø–Ω–æ: $(numfmt --to=iec ${available}K)"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–ü—Ä–æ–±–ª–µ–º–∞:* –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ $TMP_DIR\n–¢—Ä–µ–±—É–µ—Ç—Å—è: $(numfmt --to=iec ${needed}K), –î–æ—Å—Ç—É–ø–Ω–æ: $(numfmt --to=iec ${available}K)"
        exit 1
    fi
}

get_size() {
    if [ -d "$1" ]; then
        du -sb "$1" | awk '{print $1}'
    else
        stat -c %s "$1"
    fi
}

split_large_file() {
    local input_file="$1"
    local chunk_size="$2"
    local prefix="$3"

    local split_start=$(date +%s.%N)
    log "‚úÇÔ∏è –ù–∞—á–∞–ª–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ $chunk_size..."

    split -b "$chunk_size" --verbose "$input_file" "$prefix" 2>&1 | tee -a "$LOG_FILE"
    local exit_code=${PIPESTATUS[0]}

    local split_end=$(date +%s.%N)
    local split_dur=$(echo "$split_end - $split_start" | bc)

    if [ $exit_code -eq 0 ]; then
        log "‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∏—Ç –∑–∞ $(format_duration ${split_dur%.*})"
        # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è
        rm -f "$input_file"
        log "üßπ –£–¥–∞–ª–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ —Ä–∞–∑–±–∏–µ–Ω–∏—è: $(basename "$input_file")"
    else
        log "‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ñ–∞–π–ª–∞ (–∫–æ–¥ $exit_code)"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–ü—Ä–æ–±–ª–µ–º–∞:* –û—à–∏–±–∫–∞ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ñ–∞–π–ª–∞\n–ö–æ–¥ –æ—à–∏–±–∫–∏: $exit_code"
        exit 1
    fi

    ls "${prefix}"* | sort
}

upload_to_obs() {
    local file="$1"
    local object_path="${BACKUP_DATE}/$(basename "$file")"
    local attempt=0

    log "üì§ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Å—Ç–∏: $(basename "$file") (—Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $(get_size "$file")))"

    while [ $attempt -lt $MAX_RETRIES ]; do
        ((attempt++))
        local upload_start=$(date +%s.%N)
        log "üîº –ü–æ–ø—ã—Ç–∫–∞ $attempt/$MAX_RETRIES: –∑–∞–≥—Ä—É–∑–∫–∞ $(basename "$file") -> obs://${OBS_BUCKET}/${HOSTNAME}/${object_path}"

        if obsutil cp "$file" "obs://${OBS_BUCKET}/${HOSTNAME}/${object_path}" \
           -config="$OBS_CONFIG_FILE" >> "$LOG_FILE" 2>&1
        then
            local upload_end=$(date +%s.%N)
            local upload_dur=$(echo "$upload_end - $upload_start" | bc)
            log "‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞ $(format_duration ${upload_dur%.*})"
            log "üîó –ü—É—Ç—å: obs://${OBS_BUCKET}/${HOSTNAME}/${object_path}"
            return 0
        else
            log "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–∞—Å—Ç–∏ $(basename "$file"), –ø–æ–ø—ã—Ç–∫–∞ $attempt/$MAX_RETRIES"
            sleep $((attempt * 5))
        fi
    done

    log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Å—Ç—å $(basename "$file") –ø–æ—Å–ª–µ $MAX_RETRIES –ø–æ–ø—ã—Ç–æ–∫"
    send_telegram "*‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ OBS*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–§–∞–π–ª:* \`$(basename "$file")\`\n*–ü–æ–ø—ã—Ç–æ–∫:* $MAX_RETRIES"
    return 1
}

upload_all_to_obs() {
    local upload_start=$(date +%s.%N)
    local files=("$TMP_DIR"/*)
    local total_files=${#files[@]}
    local uploaded_files=0

    log "\n‚¨ÜÔ∏è –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ $total_files —Ñ–∞–π–ª–æ–≤ –∏–∑ $TMP_DIR –≤ OBS"

    for file in "${files[@]}"; do
        if [ "$file" = "$LOG_FILE" ]; then
            continue  # –õ–æ–≥-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∑–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ –≤ –∫–æ–Ω—Ü–µ
        fi

        #log "---"
        #log "üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: $(basename "$file") (—Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $(get_size "$file")))"

        if upload_to_obs "$file"; then
            ((uploaded_files++))
            rm -f "$file"
            log "üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: $(basename "$file")"
        else
            send_telegram "*üö´ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–§–∞–π–ª:* \`$(basename "$file")\`\n*–°—Ç–∞—Ç—É—Å:* –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
            exit 1
        fi
    done

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª
    log "\nüìù –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥-—Ñ–∞–π–ª–∞ –≤ OBS"
    if upload_to_obs "$LOG_FILE"; then
        ((uploaded_files++))
    else
        log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥-—Ñ–∞–π–ª, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"
    fi

    local upload_end=$(date +%s.%N)
    local upload_dur=$(echo "$upload_end - $upload_start" | bc)
    log "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ $uploaded_files/$total_files —Ñ–∞–π–ª–æ–≤ –∑–∞ $(format_duration ${upload_dur%.*})"
}

# ==================== –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ====================
main() {
    log "=== –ù–ê–ß–ê–õ–û –†–ï–ó–ï–†–í–ù–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø ==="
    log "üñ•Ô∏è –•–æ—Å—Ç: $HOSTNAME"
    log "‚ÑπÔ∏è –ò—Å—Ç–æ—á–Ω–∏–∫: $SOURCE"
    log "‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è: $COMPRESS_LEVEL"
    log "‚ÑπÔ∏è –¢–∏–ø: $([ -d "$SOURCE" ] && echo "üìÇ –ö–∞—Ç–∞–ª–æ–≥" || echo "üìÑ –§–∞–π–ª")"
    log "‚ÑπÔ∏è –†–∞–∑–º–µ—Ä: $(numfmt --to=iec $(get_size "$SOURCE"))"

    send_telegram "*üîπ –ù–∞—á–∞—Ç–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ*
*–•–æ—Å—Ç:* \`${HOSTNAME}\`
*–ò—Å—Ç–æ—á–Ω–∏–∫:* \`${SOURCE}\`
*–†–∞–∑–º–µ—Ä:* \`$(numfmt --to=iec $(get_size "$SOURCE"))\`"

    prepare_temp_dir
    check_deps
    check_disk_space

    # 1. –°–∂–∞—Ç–∏–µ
    log "\n=== –≠–¢–ê–ü –°–ñ–ê–¢–ò–Ø ==="
    local compress_start=$(date +%s.%N)

    if [ -d "$SOURCE" ]; then
        log "üîπ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞..."
        tar -cf - -C "$(dirname "$SOURCE")" "$(basename "$SOURCE")" | \
            pigz -$COMPRESS_LEVEL -k > "$ARCHIVE_FILE"
    else
        log "üîπ –°–∂–∞—Ç–∏–µ —Ñ–∞–π–ª–∞..."
        pigz -$COMPRESS_LEVEL -k -c "$SOURCE" > "$ARCHIVE_FILE"
    fi

    local compress_end=$(date +%s.%N)
    local compress_dur=$(echo "$compress_end - $compress_start" | bc)
    local compressed_size=$(get_size "$ARCHIVE_FILE")

    log "‚úÖ –°–∂–∞—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ $(format_duration ${compress_dur%.*})"
    log "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: $(numfmt --to=iec $compressed_size) (–∫–æ—ç—Ñ. $(echo "scale=2; $(get_size "$SOURCE")/$compressed_size" | bc)x)"

    # 2. –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
    log "\n=== –≠–¢–ê–ü –®–ò–§–†–û–í–ê–ù–ò–Ø ==="
    local encrypt_start=$(date +%s.%N)

    log "üîí –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AES-256-CBC..."
    openssl enc -aes-256-cbc -salt -pbkdf2 \
        -in "$ARCHIVE_FILE" \
        -out "$ENCRYPTED_FILE" \
        -pass file:"$KEYFILE"

    local encrypt_end=$(date +%s.%N)
    local encrypt_dur=$(echo "$encrypt_end - $encrypt_start" | bc)

    log "‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ $(format_duration ${encrypt_dur%.*})"
    log "üì¶ –†–∞–∑–º–µ—Ä –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $(numfmt --to=iec $(get_size "$ENCRYPTED_FILE"))"

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ –ø–æ—Å–ª–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
    rm -f "$ARCHIVE_FILE"
    log "üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤: $(basename "$ARCHIVE_FILE")"

    # 3. –†–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ OBS
    log "\n=== –≠–¢–ê–ü –†–ê–ó–ë–ò–ï–ù–ò–Ø –ò –ó–ê–ì–†–£–ó–ö–ò –í OBS ==="

    local file_size=$(get_size "$ENCRYPTED_FILE")
    local chunk_size_bytes=$(convert_to_bytes "$CHUNK_SIZE")
    #local chunk_size_bytes=$CHUNK_SIZE
    #log "echo file_size=$file_size"
    #log "echo chunk_size_bytes=$CHUNK_SIZE"
    #log "echo chunk_size_bytes=$(convert_to_bytes "$CHUNK_SIZE")"

    if [ "$file_size" -gt "$chunk_size_bytes" ]; then
        log "üîç –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç $CHUNK_SIZE ($(numfmt --to=iec $file_size)), –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–±–∏–µ–Ω–∏–µ..."
        split_large_file "$ENCRYPTED_FILE" "$CHUNK_SIZE" "$PART_PREFIX"
    else
        log "‚ÑπÔ∏è –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç $CHUNK_SIZE, –≤—ã–≥—Ä—É–∂–∞—é –∫–∞–∫ –µ—Å—Ç—å"
    fi


    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    upload_all_to_obs

    # 4. –û—á–∏—Å—Ç–∫–∞
    log "\nüßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    rm -f "${TMP_DIR}"/*
    log "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

    # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    total_time_end=$(date +%s.%N)
    total_dur=$(echo "$total_time_end - $total_time_start" | bc)
    log "\n=== –°–í–û–î–ö–ê ==="
    log "‚è≥ –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $(format_duration ${total_dur%.*})"
    log "üóÉÔ∏è –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è: $(echo "scale=2; $(get_size "$SOURCE")/$compressed_size" | bc)x"
    log "üìù –õ–æ–≥-—Ñ–∞–π–ª: $LOG_FILE"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    local tg_message="*‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ*
*–•–æ—Å—Ç:* \`${HOSTNAME}\`
*–ò—Å—Ç–æ—á–Ω–∏–∫:* \`${SOURCE}\`
*–û–±—â–µ–µ –≤—Ä–µ–º—è:* \`$(format_duration ${total_dur%.*})\`
*–ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä:* \`$(numfmt --to=iec $(get_size "$SOURCE"))\`
*–°–∂–∞—Ç—ã–π —Ä–∞–∑–º–µ—Ä:* \`$(numfmt --to=iec $compressed_size)\` (\`$(echo "scale=2; $(get_size "$SOURCE")/$compressed_size" | bc)x\`)
*–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª:* \`$(basename "$ENCRYPTED_FILE")\`
*–õ–æ–≥-—Ñ–∞–π–ª:* \`${LOG_FILE}\`"

    send_telegram "$tg_message"

    # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    log "\n=== –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ==="
    log "–û–°: $(grep PRETTY_NAME /etc/os-release | cut -d'"' -f2)"
    log "CPU: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
    log "RAM: $(free -h | awk '/Mem:/ {print $2}')"
    log "–î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
    df -h | grep -v "tmpfs" | while read line; do log "$line"; done

    log "\n=== –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û ==="
}

if ! main; then
    log "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π."
    send_telegram "*üö´ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π*\n*–•–æ—Å—Ç:* \`${HOSTNAME}\`\n*–ò—Å—Ç–æ—á–Ω–∏–∫:* \`${SOURCE}\`\n*–õ–æ–≥-—Ñ–∞–π–ª:* \`${LOG_FILE}\`\n*–°—Ç–∞—Ç—É—Å:* ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞"
    exit 1
fi

exit 0