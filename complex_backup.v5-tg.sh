#!/bin/bash
set -euo pipefail
total_time_start=$(date +%s.%N)

# –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:
# –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç:
# -c <–ø—É—Ç—å>  –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ config.sh (–Ω–∞–ø—Ä–∏–º–µ—Ä: /etc/backup/configs/db_prod_config.sh)
#
# –§–ª–∞–≥–∏ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —ç—Ç–∞–ø–æ–≤:
# -s  –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞ –ë–î (–±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª)
# -r  –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
# -t  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∏ –≤—ã–π—Ç–∏ (dry-run —Ä–µ–∂–∏–º)
#
# –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å: /opt/backup_scripts/complex_backup.sh -c /etc/backup/configs/db_prod_config.sh
# –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—á–∏—Å—Ç–∫—É: /opt/backup_scripts/complex_backup.sh -c /path/to/config.sh -r
# Dry-run: /opt/backup_scripts/complex_backup.sh -c /path/to/config.sh -t

# ==================== –ü–ê–†–°–ò–ù–ì –ê–†–ì–£–ú–ï–ù–¢–û–í ====================
SKIP_DUMP=false
SKIP_CLEAN=false
DRY_RUN=false
CONFIG_FILE=""

while getopts ":c:srt" opt; do
    case $opt in
        c) CONFIG_FILE="$OPTARG" ;;
        s) SKIP_DUMP=true ;;
        r) SKIP_CLEAN=true ;;
        t) DRY_RUN=true ;;
        \?) echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 -c <–ø—É—Ç—å –∫ config.sh> [-s] [-r] [-t]" >&2; exit 1 ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ -c
if [ -z "$CONFIG_FILE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å –∫ config.sh (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ -c)" >&2
    exit 1
fi

if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª config.sh –Ω–µ –Ω–∞–π–¥–µ–Ω: $CONFIG_FILE" >&2
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ config.sh
SCRIPT_DIR=$(dirname "$(readlink -f "$CONFIG_FILE")")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
source "$CONFIG_FILE"

# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ====================
# –í—Å–µ –ø—É—Ç–∏ –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ SCRIPT_DIR
OBS_BUCKET="black-box"
OBS_CONFIG_FILE="$HOME/.obsutilconfig"
COMPRESS_LEVEL=6
MAX_RETRIES=3
TMP_DIR="${SCRIPT_DIR}/tmp"
CHUNK_SIZE="50G"
KEYFILE="$HOME/encryption.key"
DUMP_DIR="${SCRIPT_DIR}/dump"
ARCHIVE_DIR="${SCRIPT_DIR}/dump_archive"
RETENTION_DAYS=3

# Telegram Notifications
TG_BOT_TOKEN="7627195198:AAGD3W0IFbk4Ebn23Zfnd1BkgfTYHy_as5s"
TG_CHAT_ID="-1002682982923"
TG_API_URL="https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage"

# ==================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================
HOSTNAME=$(hostname)
BACKUP_DATE=$(date +%Y-%m-%d)
TIMESTAMP=$(date +%Y%m%d)
BACKUP_NAME="backup_${DB_HOST}_${TIMESTAMP}"
ARCHIVE_FILE="${TMP_DIR}/${BACKUP_NAME}.tar.gz"
ENCRYPTED_FILE="${TMP_DIR}/${BACKUP_NAME}.enc"
LOG_FILE="${SCRIPT_DIR}/log/${BACKUP_NAME}.log"
PART_PREFIX="${TMP_DIR}/${BACKUP_NAME}_part_"
SOURCE_DUMP="${DUMP_DIR}/${DATABASE}.bac"
SOURCE="${ARCHIVE_DIR}/${DATABASE}-${BACKUP_DATE}.bac"

# ==================== –§–£–ù–ö–¶–ò–ò ====================
log() {
    local message
    message="$*"
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] ${message}" | tee -a "$LOG_FILE"
}

send_telegram() {
    local message="$1"
    curl -s -X POST "$TG_API_URL" \
        -d chat_id="$TG_CHAT_ID" \
        -d text="$message" \
        -d parse_mode="Markdown" >/dev/null
}

format_duration() {
    local seconds=$1
    printf "%02d—á %02d–º %02d—Å" $((seconds/3600)) $(( (seconds%3600)/60 )) $((seconds%60))
}

convert_to_bytes() {
    local size=$1
    echo "$size" | awk '{
        if ($0 ~ /[0-9]+K$/) {size=$0+0; size=size*1024}
        else if ($0 ~ /[0-9]+M$/) {size=$0+0; size=size*1024*1024}
        else if ($0 ~ /[0-9]+G$/) {size=$0+0; size=size*1024*1024*1024}
        else if ($0 ~ /[0-9]+T$/) {size=$0+0; size=size*1024*1024*1024*1024}
        else {size=$0+0}
        print size
    }' | tr -d '[:alpha:]'
}

check_db_connection() {
    log "\n=== –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–î ==="
    local check_start=$(date +%s.%N)
    
    export PGPASSWORD
    log "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î ${DATABASE} –Ω–∞ —Ö–æ—Å—Ç–µ ${DB_HOST}..."
    
    if psql -U "$DB_USER" -h "$DB_HOST" -p "$DB_PORT" -d "$DATABASE" -c "SELECT 1;" >/dev/null 2>>"${DUMP_DIR}/db_connection.log"; then
        local check_end=$(date +%s.%N)
        local check_dur=$(echo "$check_end - $check_start" | bc)
        log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞ $(format_duration ${check_dur%.*})"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (–∫–æ–¥ $?)"
        log "‚ö†Ô∏è –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ ${DUMP_DIR}/db_connection.log"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ë–î:* \`${DATABASE}\`
*–°—Ç–∞—Ç—É—Å:* –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å"
        exit 1
    fi
    
    unset PGPASSWORD
}

prepare_directories() {
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏
    mkdir -p "$DUMP_DIR" "$ARCHIVE_DIR" "$(dirname "$LOG_FILE")" "$TMP_DIR"
    log "‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã/—Å–æ–∑–¥–∞–Ω—ã –∫–∞—Ç–∞–ª–æ–≥–∏:"
    log "   - DUMP_DIR: $DUMP_DIR"
    log "   - ARCHIVE_DIR: $ARCHIVE_DIR"
    log "   - LOG_DIR: $(dirname "$LOG_FILE")"
    log "   - TMP_DIR: $TMP_DIR"
}

prepare_temp_dir() {
    if [ ! -d "$TMP_DIR" ]; then
        mkdir -p "$TMP_DIR"
        log "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TMP_DIR"
    else
        rm -rf "${TMP_DIR:?}/"*
        log "‚úÖ –û—á–∏—â–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $TMP_DIR"
    fi
}

check_deps() {
    local missing=()
    for cmd in tar pigz openssl obsutil split pg_dump psql; do
        if ! command -v $cmd &>/dev/null; then
            missing+=("$cmd")
        fi
    done

    if [ ${#missing[@]} -gt 0 ]; then
        log "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing[*]}"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ü—Ä–æ–±–ª–µ–º–∞:* –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ - ${missing[*]}"
        exit 1
    fi
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"

    if [ ! -f "$OBS_CONFIG_FILE" ]; then
        log "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª obsutil –Ω–µ –Ω–∞–π–¥–µ–Ω: $OBS_CONFIG_FILE"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ü—Ä–æ–±–ª–µ–º–∞:* –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥ obsutil"
        exit 1
    fi
}

check_disk_space() {
    local needed=$(($(get_size "$SOURCE") /2 / 1024))
    local available=$(df -k "$TMP_DIR" | awk 'NR==2 {print $4}')

    if [ "$available" -lt "$needed" ]; then
        log "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ $TMP_DIR. –ù—É–∂–Ω–æ: $(numfmt --to=iec ${needed}K), –¥–æ—Å—Ç—É–ø–Ω–æ: $(numfmt --to=iec ${available}K)"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ü—Ä–æ–±–ª–µ–º–∞:* –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ $TMP_DIR
–¢—Ä–µ–±—É–µ—Ç—Å—è: $(numfmt --to=iec ${needed}K), –î–æ—Å—Ç—É–ø–Ω–æ: $(numfmt --to=iec ${available}K)"
        exit 1
    fi
}

get_size() {
    if [ -d "$1" ]; then
        du -sb "$1" | awk '{print $1}'
    else
        stat -c %s "$1"
    fi
}

clean_old_backups() {
    if $SKIP_CLEAN; then
        log "\n=== –ü–†–û–ü–£–°–ö –û–ß–ò–°–¢–ö–ò –°–¢–ê–†–´–• –ë–≠–ö–ê–ü–û–í (–ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) ==="
        return 0
    fi

    log "\n=== –ü–ï–†–ï–ù–û–° –°–¢–ê–†–´–• –ë–≠–ö–ê–ü–û–í ==="
    local clean_start=$(date +%s.%N)

    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –¥–∞–º–ø–∞ –≤ –∞—Ä—Ö–∏–≤
    log "üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –¥–∞–º–ø–∞ –≤ –∞—Ä—Ö–∏–≤"
    if [ -f "$SOURCE_DUMP" ]; then
        mv "$SOURCE_DUMP" "$SOURCE"
        log "‚úÖ –§–∞–π–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω: ${SOURCE_DUMP} -> ${SOURCE}"
    else
        log "‚ö†Ô∏è –§–∞–π–ª –¥–∞–º–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $SOURCE_DUMP"
    fi

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
    log "üßπ –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤ —Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π"
    find "$ARCHIVE_DIR" -name "*.bac" -type f -mtime +$RETENTION_DAYS -delete -print | while read -r file; do
        log "üóëÔ∏è –£–¥–∞–ª–µ–Ω: $file"
    done

    local clean_end=$(date +%s.%N)
    local clean_dur=$(echo "$clean_end - $clean_start" | bc)
    log "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ $(format_duration ${clean_dur%.*})"
}

create_db_dump() {
    if $SKIP_DUMP; then
        log "\n=== –ü–†–û–ü–£–°–ö –°–û–ó–î–ê–ù–ò–Ø –î–ê–ú–ü–ê –ë–î (–ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) ==="
        
        if [ ! -f "$SOURCE_DUMP" ]; then
            log "‚ùå –§–∞–π–ª –¥–∞–º–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $SOURCE_DUMP"
            send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ü—Ä–æ–±–ª–µ–º–∞:* –§–∞–π–ª –¥–∞–º–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $SOURCE_DUMP"
            exit 1
        fi
        
        log "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∞–º–ø: $SOURCE_DUMP"
        return 0
    fi

    log "\n=== –°–û–ó–î–ê–ù–ò–ï –î–ê–ú–ü–ê –ë–î ==="
    local dump_start=$(date +%s.%N)

    log "üõ°Ô∏è –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞ –ë–î ${DATABASE} —Å —Ö–æ—Å—Ç–∞ ${DB_HOST}"
    export PGPASSWORD

    if pg_dump -U "$DB_USER" "$DATABASE" -h "$DB_HOST" -p "$DB_PORT" > "$SOURCE_DUMP" 2>>"${DUMP_DIR}/pg_dump_error_mes.log"; then
        local dump_end=$(date +%s.%N)
        local dump_dur=$(echo "$dump_end - $dump_start" | bc)
        log "‚úÖ –î–∞–º–ø –ë–î —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∑–∞ $(format_duration ${dump_dur%.*})"
        log "üìä –†–∞–∑–º–µ—Ä –¥–∞–º–ø–∞: $(numfmt --to=iec $(get_size "$SOURCE_DUMP"))"
    else
        log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–º–ø–∞ –ë–î (–∫–æ–¥ $?)"
        log "‚ö†Ô∏è –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ ${DUMP_DIR}/pg_dump_error_mes.log"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞ –ë–î*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ë–î:* \`${DATABASE}\`
*–°—Ç–∞—Ç—É—Å:* –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–º–ø–∞"
        exit 1
    fi

    unset PGPASSWORD
}

split_large_file() {
    local input_file="$1"
    local chunk_size="$2"
    local prefix="$3"

    local split_start=$(date +%s.%N)
    log "‚úÇÔ∏è –ù–∞—á–∞–ª–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ $chunk_size..."

    split -b "$chunk_size" --verbose "$input_file" "$prefix" 2>&1 | tee -a "$LOG_FILE"
    local exit_code=${PIPESTATUS[0]}

    local split_end=$(date +%s.%N)
    local split_dur=$(echo "$split_end - $split_start" | bc)

    if [ $exit_code -eq 0 ]; then
        log "‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∏—Ç –∑–∞ $(format_duration ${split_dur%.*})"
        rm -f "$input_file"
        log "üßπ –£–¥–∞–ª–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ —Ä–∞–∑–±–∏–µ–Ω–∏—è: $(basename "$input_file")"
    else
        log "‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ñ–∞–π–ª–∞ (–∫–æ–¥ $exit_code)"
        send_telegram "*üö´ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ü—Ä–æ–±–ª–µ–º–∞:* –û—à–∏–±–∫–∞ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ñ–∞–π–ª–∞
–ö–æ–¥ –æ—à–∏–±–∫–∏: $exit_code"
        exit 1
    fi

    ls "${prefix}"* | sort
}

upload_to_obs() {
    local file="$1"
    local object_path="${BACKUP_DATE}/$(basename "$file")"
    local attempt=0

    log "üì§ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Å—Ç–∏: $(basename "$file") (—Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $(get_size "$file")))"

    while [ $attempt -lt $MAX_RETRIES ]; do
        ((attempt++))
        local upload_start=$(date +%s.%N)
        log "üîº –ü–æ–ø—ã—Ç–∫–∞ $attempt/$MAX_RETRIES: –∑–∞–≥—Ä—É–∑–∫–∞ $(basename "$file") -> obs://${OBS_BUCKET}/DB/${DB_HOST}/${object_path}"

        if obsutil cp "$file" "obs://${OBS_BUCKET}/DB/${DB_HOST}/${object_path}" \
           -config="$OBS_CONFIG_FILE" >> "$LOG_FILE" 2>&1
        then
            local upload_end=$(date +%s.%N)
            local upload_dur=$(echo "$upload_end - $upload_start" | bc)
            log "‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞ $(format_duration ${upload_dur%.*})"
            log "üîó –ü—É—Ç—å: obs://${OBS_BUCKET}/DB/${DB_HOST}/${object_path}"
            return 0
        else
            log "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–∞—Å—Ç–∏ $(basename "$file"), –ø–æ–ø—ã—Ç–∫–∞ $attempt/$MAX_RETRIES"
            sleep $((attempt * 5))
        fi
    done

    log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Å—Ç—å $(basename "$file") –ø–æ—Å–ª–µ $MAX_RETRIES –ø–æ–ø—ã—Ç–æ–∫"
    send_telegram "*‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ OBS*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–§–∞–π–ª:* \`$(basename "$file")\`
*–ü–æ–ø—ã—Ç–æ–∫:* $MAX_RETRIES"
    return 1
}

upload_all_to_obs() {
    local upload_start=$(date +%s.%N)
    local files=("$TMP_DIR"/*)
    local total_files=${#files[@]}
    local uploaded_files=0

    log "\n‚¨ÜÔ∏è –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ $total_files —Ñ–∞–π–ª–æ–≤ –∏–∑ $TMP_DIR –≤ OBS"

    for file in "${files[@]}"; do
        if [ "$file" = "$LOG_FILE" ]; then
            continue
        fi

        if upload_to_obs "$file"; then
            ((uploaded_files++))
            rm -f "$file"
            log "üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: $(basename "$file")"
        else
            send_telegram "*üö´ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–§–∞–π–ª:* \`$(basename "$file")\`
*–°—Ç–∞—Ç—É—Å:* –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
            exit 1
        fi
    done

    log "\nüìù –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥-—Ñ–∞–π–ª–∞ –≤ OBS"
    if upload_to_obs "$LOG_FILE"; then
        ((uploaded_files++))
    else
        log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥-—Ñ–∞–π–ª, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"
    fi

    local upload_end=$(date +%s.%N)
    local upload_dur=$(echo "$upload_end - $upload_start" | bc)
    log "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ $uploaded_files/$total_files —Ñ–∞–π–ª–æ–≤ –∑–∞ $(format_duration ${upload_dur%.*})"
}

# ==================== –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ====================
main() {
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    prepare_directories

    log "=== –ù–ê–ß–ê–õ–û –†–ï–ó–ï–†–í–ù–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø ==="
    log "üñ•Ô∏è –•–æ—Å—Ç –ë–î: $DB_HOST"
    log "üè∑Ô∏è –ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä: $HOSTNAME"
    log "üóÉÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DATABASE"
    log "üìÇ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: $CONFIG_FILE"
    log "‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞:"
    log "  - –ü—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞: $SKIP_DUMP"
    log "  - –ü—Ä–æ–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏: $SKIP_CLEAN"
    log "  - –†–µ–∂–∏–º dry-run: $DRY_RUN"

    send_telegram "*üîπ –ù–∞—á–∞—Ç–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ë–î:* \`${DATABASE}\`
*–†–µ–∂–∏–º:* $($DRY_RUN && echo "Dry-run" || echo "–ü–æ–ª–Ω—ã–π")"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞)
    if ! $SKIP_DUMP || $DRY_RUN; then
        check_db_connection
        if $DRY_RUN; then
            log "\n=== DRY RUN –ó–ê–í–ï–†–®–ï–ù ==="
            log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É."
            send_telegram "*‚úÖ Dry-run –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ë–î:* \`${DATABASE}\`
*–°—Ç–∞—Ç—É—Å:* –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
            exit 0
        fi
    fi

    # 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–∞)
    clean_old_backups

    # 2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–∞–º–ø–∞ –ë–î (–µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ)
    create_db_dump

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ
    prepare_temp_dir
    check_deps
    check_disk_space

    # 3. –°–∂–∞—Ç–∏–µ
    log "\n=== –°–ñ–ê–¢–ò–ï ==="
    local compress_start=$(date +%s.%N)

    log "üîπ –°–∂–∞—Ç–∏–µ —Ñ–∞–π–ª–∞..."
    pigz -$COMPRESS_LEVEL -k -c "$SOURCE" > "$ARCHIVE_FILE"

    local compress_end=$(date +%s.%N)
    local compress_dur=$(echo "$compress_end - $compress_start" | bc)
    local compressed_size=$(get_size "$ARCHIVE_FILE")

    log "‚úÖ –°–∂–∞—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ $(format_duration ${compress_dur%.*})"
    log "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: $(numfmt --to=iec $compressed_size) (–∫–æ—ç—Ñ. $(echo "scale=2; $(get_size "$SOURCE")/$compressed_size" | bc)x)"

    # 4. –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
    log "\n=== –®–ò–§–†–û–í–ê–ù–ò–ï ==="
    local encrypt_start=$(date +%s.%N)

    log "üîí –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AES-256-CBC..."
    openssl enc -aes-256-cbc -salt -pbkdf2 \
        -in "$ARCHIVE_FILE" \
        -out "$ENCRYPTED_FILE" \
        -pass file:"$KEYFILE"

    local encrypt_end=$(date +%s.%N)
    local encrypt_dur=$(echo "$encrypt_end - $encrypt_start" | bc)

    log "‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ $(format_duration ${encrypt_dur%.*})"
    log "üì¶ –†–∞–∑–º–µ—Ä –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $(numfmt --to=iec $(get_size "$ENCRYPTED_FILE"))"

    rm -f "$ARCHIVE_FILE"
    log "üßπ –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤: $(basename "$ARCHIVE_FILE")"

    # 5. –†–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ OBS
    log "\n=== –†–ê–ó–ë–ò–ï–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê –í OBS ==="

    local file_size=$(get_size "$ENCRYPTED_FILE")
    local chunk_size_bytes=$(convert_to_bytes "$CHUNK_SIZE")

    if [ "$file_size" -gt "$chunk_size_bytes" ]; then
        log "üîç –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç $CHUNK_SIZE ($(numfmt --to=iec $file_size)), –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–±–∏–µ–Ω–∏–µ..."
        split_large_file "$ENCRYPTED_FILE" "$CHUNK_SIZE" "$PART_PREFIX"
    else
        log "‚ÑπÔ∏è –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç $CHUNK_SIZE, –≤—ã–≥—Ä—É–∂–∞—é –∫–∞–∫ –µ—Å—Ç—å"
    fi

    upload_all_to_obs

    # 6. –û—á–∏—Å—Ç–∫–∞
    log "\nüßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
    rm -f "${TMP_DIR}"/*
    log "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

    # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    total_time_end=$(date +%s.%N)
    total_dur=$(echo "$total_time_end - $total_time_start" | bc)
    log "\n=== –°–í–û–î–ö–ê ==="
    log "‚è≥ –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $(format_duration ${total_dur%.*})"
    log "üóÉÔ∏è –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è: $(echo "scale=2; $(get_size "$SOURCE")/$compressed_size" | bc)x)"
    log "üìù –õ–æ–≥-—Ñ–∞–π–ª: $LOG_FILE"

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    local tg_message="*‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ë–î:* \`${DATABASE}\`
*–û–±—â–µ–µ –≤—Ä–µ–º—è:* \`$(format_duration ${total_dur%.*})\`
*–ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä:* \`$(numfmt --to=iec $(get_size "$SOURCE"))\`
*–°–∂–∞—Ç—ã–π —Ä–∞–∑–º–µ—Ä:* \`$(numfmt --to=iec $compressed_size)\` (\`$(echo "scale=2; $(get_size "$SOURCE")/$compressed_size" | bc)x\`)
*–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª:* \`$(basename "$ENCRYPTED_FILE")\`
*–õ–æ–≥-—Ñ–∞–π–ª:* \`${LOG_FILE}\`"

    send_telegram "$tg_message"

    log "\n=== –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ==="
    log "–û–°: $(grep PRETTY_NAME /etc/os-release | cut -d'"' -f2)"
    log "CPU: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
    log "RAM: $(free -h | awk '/Mem:/ {print $2}')"
    log "–î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
    df -h | grep -v "tmpfs" | while read line; do log "$line"; done

    log "\n=== –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û ==="
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
if ! main; then
    log "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π."
    send_telegram "*üö´ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π*
*–°–µ—Ä–≤–µ—Ä –ë–î:* \`${DB_HOST}\`
*–ë–µ–∫–∞–ø —Å–µ—Ä–≤–µ—Ä:* \`${HOSTNAME}\`
*–ë–î:* \`${DATABASE}\`
*–õ–æ–≥-—Ñ–∞–π–ª:* \`${LOG_FILE}\`
*–°—Ç–∞—Ç—É—Å:* ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞"
    exit 1
fi

exit 0