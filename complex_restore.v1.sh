#!/bin/bash
set -euo pipefail

# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ====================
OBS_BUCKET="black-box"
OBS_CONFIG_FILE="$HOME/.obsutilconfig"
KEYFILE="$HOME/encryption.key"
TMP_DIR="/tmp/restore_backup"
SCRIPT_DIR=$(dirname "$(readlink -f "$0")")

# Telegram Notifications (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
TG_BOT_TOKEN="7627195198:AAGD3W0IFbk4Ebn23Zfnd1BkgfTYHy_as5s"
TG_CHAT_ID="-1002682982923"
TG_API_URL="https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage"

# ==================== –§–£–ù–ö–¶–ò–ò ====================
log() {
    local message="$*"
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] ${message}"
}

send_telegram() {
    local message="$1"
    curl -s -X POST "$TG_API_URL" \
        -d chat_id="$TG_CHAT_ID" \
        -d text="$message" \
        -d parse_mode="Markdown" >/dev/null 2>&1 || log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"
}

check_deps() {
    local missing=()
    for cmd in openssl pigz obsutil psql; do
        if ! command -v "$cmd" &>/dev/null; then
            missing+=("$cmd")
        fi
    done

    if [ ${#missing[@]} -gt 0 ]; then
        log "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing[*]}"
        exit 1
    fi
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
}

prepare_directories() {
    mkdir -p "$TMP_DIR" "$RESTORE_DIR"
    log "‚úÖ –°–æ–∑–¥–∞–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
}

cleanup() {
    log "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf "${TMP_DIR:?}/"*
    log "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
}

download_from_obs() {
    local obs_path="$1"
    local download_start=$(date +%s)
    
    log "üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ OBS: obs://${OBS_BUCKET}/${obs_path}"
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    local log_file="${TMP_DIR}/obs_download.log"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
    echo "–ö–æ–º–∞–Ω–¥–∞: obsutil cp \"obs://${OBS_BUCKET}/${obs_path}\" \"$TMP_DIR/\" -config=\"$OBS_CONFIG_FILE\" -r -f" >> "$log_file"
    
    if obsutil cp "obs://${OBS_BUCKET}/${obs_path}" "$TMP_DIR/" \
       -config="$OBS_CONFIG_FILE" -r -f >> "$log_file" 2>&1; then
        local download_end=$(date +%s)
        local download_dur=$((download_end - download_start))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
        local file_count=$(find "$TMP_DIR" -type f | wc -l)
        log "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $file_count –∑–∞ ${download_dur} —Å–µ–∫—É–Ω–¥"
        
        if [ "$file_count" -eq 0 ]; then
            log "‚ùå –§–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–ø—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è)"
            log "üìã –õ–æ–≥ –∑–∞–≥—Ä—É–∑–∫–∏:"
            cat "$log_file"
            return 1
        fi
        
        return 0
    else
        local exit_code=$?
        local download_end=$(date +%s)
        local download_dur=$((download_end - download_start))
        
        log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏–∑ OBS (–∫–æ–¥: $exit_code, –≤—Ä–µ–º—è: ${download_dur}—Å–µ–∫)"
        log "üìã –õ–æ–≥ –∑–∞–≥—Ä—É–∑–∫–∏:"
        cat "$log_file"
        return 1
    fi
}

combine_parts() {
    local output_file="$1"
    local parts=("$TMP_DIR"/*)
    
    if [ ${#parts[@]} -eq 0 ]; then
        log "‚ùå –í –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤"
        return 1
    fi

    log "üîó –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ ${#parts[@]} —á–∞—Å—Ç–µ–π —Ñ–∞–π–ª–∞..."
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –∏–º–µ–Ω–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
    local sorted_parts=($(ls "$TMP_DIR"/* | sort))
    log "üìã –ß–∞—Å—Ç–∏ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: ${sorted_parts[*]}"
    
    cat "${sorted_parts[@]}" > "$output_file"
    
    if [ $? -eq 0 ]; then
        local output_size=$(du -h "$output_file" | cut -f1)
        log "‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã: $(basename "$output_file") (—Ä–∞–∑–º–µ—Ä: $output_size)"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"
        return 1
    fi
}

decrypt_file() {
    local encrypted_file="$1"
    local decrypted_file="$2"
    local decrypt_start=$(date +%s)
    
    log "üîì –î–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: $(basename "$encrypted_file")"
    
    if openssl enc -aes-256-cbc -d -pbkdf2 \
        -in "$encrypted_file" \
        -out "$decrypted_file" \
        -pass file:"$KEYFILE" 2>"${TMP_DIR}/decrypt.log"; then
        local decrypt_end=$(date +%s)
        local decrypt_dur=$((decrypt_end - decrypt_start))
        local decrypted_size=$(du -h "$decrypted_file" | cut -f1)
        log "‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω –∑–∞ ${decrypt_dur} —Å–µ–∫—É–Ω–¥ (—Ä–∞–∑–º–µ—Ä: $decrypted_size)"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞"
        log "üìã –õ–æ–≥ –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è:"
        cat "${TMP_DIR}/decrypt.log"
        return 1
    fi
}

decompress_file() {
    local compressed_file="$1"
    local output_file="$2"
    local decompress_start=$(date +%s)
    
    log "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Ñ–∞–π–ª–∞: $(basename "$compressed_file")"
    
    if pigz -d -c "$compressed_file" > "$output_file" 2>"${TMP_DIR}/decompress.log"; then
        local decompress_end=$(date +%s)
        local decompress_dur=$((decompress_end - decompress_start))
        local output_size=$(du -h "$output_file" | cut -f1)
        log "‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –∑–∞ ${decompress_dur} —Å–µ–∫—É–Ω–¥ (—Ä–∞–∑–º–µ—Ä: $output_size)"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —Ñ–∞–π–ª–∞"
        log "üìã –õ–æ–≥ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏:"
        cat "${TMP_DIR}/decompress.log"
        return 1
    fi
}

get_user_input() {
    echo "=============================================="
    echo "         –°–ö–†–ò–ü–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ë–î"
    echo "=============================================="
    echo
    
    # –ó–∞–ø—Ä–æ—Å OBS –ø—É—Ç–∏
    read -p "–í–≤–µ–¥–∏—Ç–µ OBS –ø—É—Ç—å –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: DB/itsm-p-dba01/2024-01-15): " OBS_PATH
    if [ -z "$OBS_PATH" ]; then
        echo "‚ùå OBS –ø—É—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        exit 1
    fi
    
    # –ó–∞–ø—Ä–æ—Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${SCRIPT_DIR}/restore]: " RESTORE_DIR
    RESTORE_DIR="${RESTORE_DIR:-${SCRIPT_DIR}/restore}"
    
    echo
    echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
    echo "‚Ä¢ OBS –ø—É—Ç—å: ${OBS_PATH}"
    echo "‚Ä¢ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ${RESTORE_DIR}"
    echo
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
        echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        exit 0
    fi
}

# ==================== –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ====================
main() {
    total_start=$(date +%s)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    get_user_input
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    check_deps
    prepare_directories
    
    log "=== –ù–ê–ß–ê–õ–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø ==="
    log "üìÅ OBS –ø—É—Ç—å: ${OBS_PATH}"
    log "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ${RESTORE_DIR}"
    log "üîë –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ${KEYFILE}"
    log "üì¶ OBS –±–∞–∫–µ—Ç: ${OBS_BUCKET}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
    if [ ! -f "$KEYFILE" ]; then
        log "‚ùå –§–∞–π–ª –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: $KEYFILE"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞ obsutil
    if [ ! -f "$OBS_CONFIG_FILE" ]; then
        log "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª obsutil –Ω–µ –Ω–∞–π–¥–µ–Ω: $OBS_CONFIG_FILE"
        exit 1
    fi

    # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ OBS
    if ! download_from_obs "$OBS_PATH"; then
        log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ OBS"
        cleanup
        exit 1
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    log "üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    ls -la "$TMP_DIR/" | while read -r line; do
        log "   $line"
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —á–∞—Å—Ç–∏ —Ñ–∞–π–ª–∞ –∏–ª–∏ –æ–¥–∏–Ω —Ñ–∞–π–ª
    local files=("$TMP_DIR"/*)
    local encrypted_file=""
    
    if [ ${#files[@]} -gt 1 ]; then
        # –ï—Å–ª–∏ multiple parts - –æ–±—ä–µ–¥–∏–Ω—è–µ–º
        encrypted_file="${TMP_DIR}/combined_backup.enc"
        if ! combine_parts "$encrypted_file"; then
            cleanup
            exit 1
        fi
    else
        # –ï—Å–ª–∏ –æ–¥–∏–Ω —Ñ–∞–π–ª
        encrypted_file="${files[0]}"
        log "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: $(basename "$encrypted_file")"
    fi
    
    # 2. –î–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
    local decrypted_file="${TMP_DIR}/backup_decrypted.tar.gz"
    if ! decrypt_file "$encrypted_file" "$decrypted_file"; then
        cleanup
        exit 1
    fi
    
    # 3. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
    local final_output="${RESTORE_DIR}/database_backup.bac"
    if ! decompress_file "$decrypted_file" "$final_output"; then
        cleanup
        exit 1
    fi
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    cleanup
    
    local total_end=$(date +%s)
    local total_dur=$((total_end - total_start))
    
    log "=============================================="
    log "‚úÖ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û"
    log "‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: ${total_dur} —Å–µ–∫—É–Ω–¥"
    log "üìÅ –§–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${final_output}"
    log "üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(du -h "$final_output" | cut -f1)"
    log "=============================================="
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
    local tg_message="*‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–æ*
*OBS –ø—É—Ç—å:* \`${OBS_PATH}\`
*–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:* \`${RESTORE_DIR}\`
*–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:* \`${total_dur} —Å–µ–∫—É–Ω–¥\`
*–§–∞–π–ª:* \`$(basename "$final_output")\`"
    
    send_telegram "$tg_message"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
trap 'echo; log "‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; cleanup; exit 1' INT

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
main

exit 0