#!/bin/bash
set -euo pipefail

# ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ====================
OBS_BUCKET="black-box"
OBS_CONFIG_FILE="$HOME/.obsutilconfig"
RETENTION_DAYS=30
OBS_BASE_PATH="DB-test"

# Telegram Notifications
TG_BOT_TOKEN="7627195198:AAGD3W0IFbk4Ebn23Zfnd1BkgfTYHy_as5s"
TG_CHAT_ID="-1002682982923"
TG_API_URL="https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage"

# ==================== –§–£–ù–ö–¶–ò–ò ====================
log() {
    local message="$*"
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] ${message}"
}

send_telegram() {
    local message="$1"
    curl -s -X POST "$TG_API_URL" \
        -d chat_id="$TG_CHAT_ID" \
        -d text="$message" \
        -d parse_mode="Markdown" >/dev/null 2>&1 || log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"
}

check_deps() {
    local missing=()
    for cmd in obsutil date jq; do
        if ! command -v "$cmd" &>/dev/null; then
            missing+=("$cmd")
        fi
    done

    if [ ${#missing[@]} -gt 0 ]; then
        log "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing[*]}"
        exit 1
    fi
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"

    if [ ! -f "$OBS_CONFIG_FILE" ]; then
        log "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª obsutil –Ω–µ –Ω–∞–π–¥–µ–Ω: $OBS_CONFIG_FILE"
        exit 1
    fi
}

check_s3_connection() {
    log "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OBS S3 (bucket: ${OBS_BUCKET})..."
    
    if obsutil ls "obs://${OBS_BUCKET}" -config="$OBS_CONFIG_FILE" >/dev/null 2>&1; then
        log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OBS S3 —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OBS S3"
        exit 1
    fi
}

is_valid_date() {
    local date_str="$1"
    if [[ "$date_str" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
        date -d "$date_str" >/dev/null 2>&1
        return $?
    fi
    return 1
}

get_host_directories() {
    local base_path="$1"
    log "üîç –ü–æ–∏—Å–∫ —Ö–æ—Å—Ç–æ–≤ –≤ ${base_path}"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º JSON –≤—ã–≤–æ–¥ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
    obsutil ls "obs://${OBS_BUCKET}/${base_path}" -dir -config="$OBS_CONFIG_FILE" -j 2>/dev/null | \
    jq -r '.Contents[]? | select(.Key != null) | .Key' | \
    grep -E "/[^/]+/$" | \
    awk -F/ '{print $(NF-1)}' | \
    sort -u | \
    while read -r host; do
        if [ -n "$host" ]; then
            echo "${base_path}/${host}"
        fi
    done
}

get_date_directories() {
    local host_path="$1"
    log "üìÖ –ü–æ–∏—Å–∫ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ —Å –¥–∞—Ç–∞–º–∏ –≤ ${host_path}"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º JSON –≤—ã–≤–æ–¥ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
    obsutil ls "obs://${OBS_BUCKET}/${host_path}" -dir -config="$OBS_CONFIG_FILE" -j 2>/dev/null | \
    jq -r '.Contents[]? | select(.Key != null) | .Key' | \
    grep -E "/[0-9]{4}-[0-9]{2}-[0-9]{2}/$" | \
    while read -r full_path; do
        local date_str=$(basename "$full_path" | sed 's|/$||')
        if is_valid_date "$date_str"; then
            echo "${full_path} ${date_str}"
        else
            log "‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É: ${date_str}"
        fi
    done
}

delete_old_date_directory() {
    local full_path="$1"
    local date_str="$2"
    local cutoff_date=$(date -d "-${RETENTION_DAYS} days" +%Y-%m-%d)
    
    if [[ "$date_str" < "$cutoff_date" ]]; then
        log "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞: ${full_path} (–¥–∞—Ç–∞: ${date_str})"
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞
        local total_size=0
        obsutil ls "obs://${OBS_BUCKET}/${full_path}" -recursive -config="$OBS_CONFIG_FILE" -j 2>/dev/null | \
        jq -r '.Contents[]? | select(.Size != null) | .Size' | \
        while read -r size; do
            total_size=$((total_size + size))
        done
        
        # –£–¥–∞–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥
        if obsutil rm "obs://${OBS_BUCKET}/${full_path}" -config="$OBS_CONFIG_FILE" -f -recursive >/dev/null 2>&1; then
            log "‚úÖ –£–¥–∞–ª–µ–Ω–æ: ${full_path} ($(numfmt --to=iec "$total_size"))"
            echo "$total_size"
        else
            log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: ${full_path}"
            echo "0"
        fi
    else
        log "‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º: ${full_path} (–¥–∞—Ç–∞: ${date_str})"
        echo "0"
    fi
}

clean_host_directory() {
    local host_path="$1"
    local deleted_count=0
    local total_freed=0
    
    log "\nüìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–æ—Å—Ç–∞: ${host_path}"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–∞–ª–æ–≥–∏ —Å –¥–∞—Ç–∞–º–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ö–æ—Å—Ç–∞
    while IFS= read -r line; do
        if [ -n "$line" ]; then
            read -r date_path date_str <<< "$line"
            freed_size=$(delete_old_date_directory "$date_path" "$date_str")
            if [ "$freed_size" -gt 0 ]; then
                ((deleted_count++))
                total_freed=$((total_freed + freed_size))
            fi
        fi
    done < <(get_date_directories "$host_path")
    
    if [ $deleted_count -gt 0 ]; then
        log "üìä –ò—Ç–æ–≥ –ø–æ —Ö–æ—Å—Ç—É ${host_path}: —É–¥–∞–ª–µ–Ω–æ ${deleted_count} –∫–∞—Ç–∞–ª–æ–≥–æ–≤, –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ $(numfmt --to=iec "$total_freed")"
    else
        log "‚úÖ –ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ ${host_path}"
    fi
    
    echo "$deleted_count $total_freed"
}

clean_empty_host_directories() {
    local base_path="$1"
    
    log "üßΩ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Å—Ç—ã—Ö —Ö–æ—Å—Ç–æ–≤—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –≤ ${base_path}"
    
    while IFS= read -r host_path; do
        if [ -n "$host_path" ]; then
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏
            local has_dates=$(obsutil ls "obs://${OBS_BUCKET}/${host_path}" -dir -config="$OBS_CONFIG_FILE" -j 2>/dev/null | \
                            jq -r '.Contents[]? | select(.Key != null) | .Key' | wc -l)
            
            if [ "$has_dates" -eq 0 ]; then
                log "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ–π —Ö–æ—Å—Ç–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ${host_path}"
                obsutil rm "obs://${OBS_BUCKET}/${host_path}" -config="$OBS_CONFIG_FILE" -f -folder >/dev/null 2>&1
            fi
        fi
    done < <(get_host_directories "$base_path")
}

# ==================== –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ====================
main() {
    local total_deleted=0
    local total_freed=0
    local host_count=0
    
    log "=== –ù–ê–ß–ê–õ–û –û–ß–ò–°–¢–ö–ò –°–¢–ê–†–´–• –ë–≠–ö–ê–ü–û–í –í OBS ==="
    log "ü™£ –ë–∞–∫–µ—Ç: $OBS_BUCKET"
    log "üìÖ –£–¥–µ—Ä–∂–∞–Ω–∏–µ: $RETENTION_DAYS –¥–Ω–µ–π"
    log "üìÅ –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å: $OBS_BASE_PATH"
    log "‚è∞ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: $(date '+%Y-%m-%d')"
    log "üìÖ –î–∞—Ç–∞ –æ—Ç—Å–µ—á–µ–Ω–∏—è: $(date -d "-${RETENTION_DAYS} days" '+%Y-%m-%d')"
    
    check_deps
    check_s3_connection
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ö–æ—Å—Ç–æ–≤—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    while IFS= read -r host_path; do
        if [ -n "$host_path" ]; then
            ((host_count++))
            result=$(clean_host_directory "$host_path")
            read -r deleted freed <<< "$result"
            total_deleted=$((total_deleted + deleted))
            total_freed=$((total_freed + freed))
        fi
    done < <(get_host_directories "$OBS_BASE_PATH")
    
    log "üîç –ù–∞–π–¥–µ–Ω–æ —Ö–æ—Å—Ç–æ–≤—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: ${host_count}"
    
    # –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ —Ö–æ—Å—Ç–æ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    clean_empty_host_directories "$OBS_BASE_PATH"
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    log "\n=== –ò–¢–û–ì–ò –û–ß–ò–°–¢–ö–ò ==="
    log "üóëÔ∏è –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –∫–∞—Ç–∞–ª–æ–≥–æ–≤: ${total_deleted}"
    log "üíæ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: $(numfmt --to=iec "$total_freed")"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    if [ $total_deleted -gt 0 ]; then
        local message="*üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ –≤ OBS*
*–ë–∞–∫–µ—Ç:* \`${OBS_BUCKET}\`
*–ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å:* \`${OBS_BASE_PATH}\`
*–£–¥–µ—Ä–∂–∞–Ω–∏–µ:* \`${RETENTION_DAYS}\` –¥–Ω–µ–π
*–£–¥–∞–ª–µ–Ω–æ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:* \`${total_deleted}\`
*–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞:* \`$(numfmt --to=iec "$total_freed")\`
*–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:* \`$(date '+%Y-%m-%d %H:%M:%S')\`"
        
        send_telegram "$message"
    else
        log "‚úÖ –ù–µ—Ç —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
    fi
    
    log "=== –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ==="
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while getopts ":b:d:r:c:" opt; do
    case $opt in
        b) OBS_BUCKET="$OPTARG" ;;
        d) OBS_BASE_PATH="$OPTARG" ;;
        r) RETENTION_DAYS="$OPTARG" ;;
        c) OBS_CONFIG_FILE="$OPTARG" ;;
        \?) echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [-b <bucket>] [-d <base_path>] [-r <retention_days>] [-c <config_file>]" >&2; exit 1 ;;
    esac
done

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
if ! main; then
    log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—á–∏—Å—Ç–∫–∏!"
    exit 1
fi

exit 0