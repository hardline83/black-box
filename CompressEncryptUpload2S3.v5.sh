#!/bin/bash
set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
S3_ENDPOINT="coca-cola.obs.ru-moscow-1.hc.sbercloud.ru"
S3_CREDENTIALS_FILE="/etc/s3_credentials.conf"  # –§–æ—Ä–º–∞—Ç: ACCESS_KEY=xxx\nSECRET_KEY=yyy
COMPRESS_LEVEL=9                                # –£—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è (1-9)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ "$#" -ne 2 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∏—Å—Ö–æ–¥–Ω—ã–π_—Ñ–∞–π–ª_–∏–ª–∏_–ø–∞–ø–∫–∞> <–∫–ª—é—á_—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è.key>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 /data/project_files encryption.key"
    exit 1
fi

SOURCE="$1"
KEYFILE="$2"
HOSTNAME=$(hostname)
BACKUP_DATE=$(date +%Y-%m-%d)
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_NAME="backup_${HOSTNAME}_${TIMESTAMP}"
ARCHIVE_FILE="/backup-data/dev-blackbox/tmp/${BACKUP_NAME}.tar.gz"
ENCRYPTED_FILE="/backup-data/dev-blackbox/tmp/${BACKUP_NAME}.enc"
LOG_FILE="/backup-data/dev-blackbox/backup_${BACKUP_NAME}.log"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∞
exec > >(tee -a "$LOG_FILE") 2>&1
echo "=== –ù–ê–ß–ê–õ–û –†–ï–ó–ï–†–í–ù–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø $(date) ==="
echo "–•–æ—Å—Ç: $HOSTNAME"
echo "–ò—Å—Ç–æ—á–Ω–∏–∫: $SOURCE"
echo "–¢–∏–ø: $([ -d "$SOURCE" ] && echo "–ö–∞—Ç–∞–ª–æ–≥" || echo "–§–∞–π–ª")"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_deps() {
    for cmd in tar pigz openssl aws; do
        if ! command -v $cmd &>/dev/null; then
            echo "‚ùå –û—à–∏–±–∫–∞: $cmd –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            exit 1
        fi
    done
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —É—Å–ø–µ—à–Ω–∞"
}
check_deps

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
get_size() {
    if [ -d "$1" ]; then
        du -sb "$1" | cut -f1
    else
        stat -c %s "$1"
    fi
}

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
format_duration() {
    local seconds=$1
    printf "%02d:%02d:%02d" $((seconds/3600)) $(( (seconds%3600)/60 )) $((seconds%60))
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3
upload_to_s3() {
    local file=$1
    local s3_path="s3://${HOSTNAME}/${BACKUP_DATE}/$(basename "$file")"
    
    source "$S3_CREDENTIALS_FILE"
    local start=$(date +%s.%N)
    
    echo "üîº –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ $(basename "$file") –≤ S3 ($(numfmt --to=iec $(get_size "$file")))"
    AWS_ACCESS_KEY_ID="$ACCESS_KEY" \
    AWS_SECRET_ACCESS_KEY="$SECRET_KEY" \
    aws s3 cp "$file" "$s3_path" \
        --endpoint-url "https://$S3_ENDPOINT" \
        --region ru-moscow-1
    
    local exit_code=$?
    local end=$(date +%s.%N)
    local duration=$(echo "$end - $start" | bc | awk '{printf "%.2f", $0}')
    
    if [ $exit_code -eq 0 ]; then
        echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞ $duration —Å–µ–∫. S3 Path: $s3_path"
        echo "üîó URL: https://${HOSTNAME}.${S3_ENDPOINT}/${BACKUP_DATE}/$(basename "$file")"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (–∫–æ–¥ $exit_code)"
        exit 1
    fi
}

# --- –û–°–ù–û–í–ù–û–ô –ü–†–û–¶–ï–°–° ---

# 1. –°–∂–∞—Ç–∏–µ
echo -e "\n=== –≠–¢–ê–ü –°–ñ–ê–¢–ò–Ø ==="
COMPRESS_START=$(date +%s.%N)
ORIGINAL_SIZE=$(get_size "$SOURCE")

echo "üì¶ –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $ORIGINAL_SIZE)"
echo "‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å —Å–∂–∞—Ç–∏—è: $COMPRESS_LEVEL"

if [ -d "$SOURCE" ]; then
    echo "üîπ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞..."
    tar -cf - -C "$(dirname "$SOURCE")" "$(basename "$SOURCE")" | \
        pigz -$COMPRESS_LEVEL -k > "$ARCHIVE_FILE"
else
    echo "üîπ –°–∂–∞—Ç–∏–µ —Ñ–∞–π–ª–∞..."
    pigz -$COMPRESS_LEVEL -k -c "$SOURCE" > "$ARCHIVE_FILE"
fi

COMPRESS_END=$(date +%s.%N)
COMPRESS_DUR=$(echo "$COMPRESS_END - $COMPRESS_START" | bc | awk '{printf "%.2f", $0}')
COMPRESSED_SIZE=$(get_size "$ARCHIVE_FILE")

echo "‚úÖ –°–∂–∞—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ $COMPRESS_DUR —Å–µ–∫."
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: $(numfmt --to=iec $COMPRESSED_SIZE) (–∫–æ—ç—Ñ. $(echo "scale=2; $ORIGINAL_SIZE/$COMPRESSED_SIZE" | bc)x)"

# 2. –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
echo -e "\n=== –≠–¢–ê–ü –®–ò–§–†–û–í–ê–ù–ò–Ø ==="
ENCRYPT_START=$(date +%s.%N)

echo "üîí –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AES-256-CBC..."
openssl enc -aes-256-cbc -salt -pbkdf2 \
    -in "$ARCHIVE_FILE" \
    -out "$ENCRYPTED_FILE" \
    -pass file:"$KEYFILE"

ENCRYPT_END=$(date +%s.%N)
ENCRYPT_DUR=$(echo "$ENCRYPT_END - $ENCRYPT_START" | bc | awk '{printf "%.2f", $0}')
ENCRYPTED_SIZE=$(get_size "$ENCRYPTED_FILE")

echo "‚úÖ –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ $ENCRYPT_DUR —Å–µ–∫."
echo "üì¶ –†–∞–∑–º–µ—Ä –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $(numfmt --to=iec $ENCRYPTED_SIZE)"

# 3. –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3
echo -e "\n=== –≠–¢–ê–ü –ó–ê–ì–†–£–ó–ö–ò –í S3 ==="
upload_to_s3 "$ENCRYPTED_FILE"
upload_to_s3 "$LOG_FILE"

# 4. –û—á–∏—Å—Ç–∫–∞
rm -f "$ARCHIVE_FILE" "$ENCRYPTED_FILE"
echo -e "\n‚ö†Ô∏è –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo -e "\n=== –°–í–û–î–ö–ê ==="
TOTAL_DUR=$(echo "$(date +%s.%N) - $(echo "$COMPRESS_START" | cut -d'.' -f1)" | bc)
echo "–û–±—â–µ–µ –≤—Ä–µ–º—è: $(format_duration $TOTAL_DUR)"
echo "–ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $ORIGINAL_SIZE)"
echo "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: $(numfmt --to=iec $ENCRYPTED_SIZE)"
echo "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è: $(echo "scale=2; $ORIGINAL_SIZE/$COMPRESSED_SIZE" | bc)x"
echo "–õ–æ–≥-—Ñ–∞–π–ª: $LOG_FILE"

# –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo -e "\n=== –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ==="
echo "–û–°: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2)"
echo "CPU: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
echo "RAM: $(free -h | awk '/Mem:/ {print $2}')"
echo "–î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:"
df -h | grep -v "tmpfs"

echo -e "\n=== –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û $(date) ==="